{
    "javascript":[
        {
      "id": 1,
      "title": "JavaScript Introduction",
      "description": "JavaScript is a programming language that is commonly used in web development. It is a client-side language, meaning that it runs on the user's browser, rather than on the server. JavaScript was created by Brendan Eich in just 10 days in 1995, while he was working at Netscape Communications Corporation. JavaScript is used to add interactivity and dynamic behavior to web pages. It can be used to create animations, validate forms, manipulate the DOM, and much more. JavaScript is an object-oriented language, meaning that it uses objects to represent data and methods. Objects can be created from classes, which define the properties and methods that the object will have. Variables are used to store data in JavaScript. There are several different types of variables, including strings, numbers, and booleans. JavaScript uses control structures, such as if statements and loops, to control the flow of a program. These structures allow developers to execute different blocks of code based on certain conditions. Functions are used in JavaScript to encapsulate a set of instructions that can be reused throughout a program. Functions can take parameters, which are values that are passed to the function when it is called. JavaScript has built-in objects, such as the Math object and the Date object, which provide useful functionality that can be used in a program. JavaScript can be used to interact with the browser's Document Object Model (DOM), which represents the structure of an HTML document. This allows developers to dynamically modify the content and behavior of a web page. JavaScript is a constantly evolving language, with new features and updates being added regularly. It is an essential tool for web developers, and is used by companies and organizations of all sizes to create engaging and interactive web experiences.",
      "exampleCode":"",
      "subTopics":[]
    },
    {
        "id": 2,
        "title": "JavaScript Strings",
        "description": "<p> In JavaScript, strings are a sequence of characters that are enclosed in quotes. Strings can be created using single quotes, double quotes, or backticks. Here are some examples of creating strings in JavaScript: Using single quotes: javascript <pre> <code> let myString = 'This is a string.'; </code> </pre> Using double quotes: javascript Copy code let myString = \"This is also a string.\"; Using backticks (template literals): javascript Copy code let myString = `This is a string with ${variable} and ${expression}.`; In addition to creating strings, JavaScript provides a number of built-in methods for manipulating strings. Here are some common string methods: length: returns the length of the string javascript Copy code let myString = 'Hello, world!'; console.log(myString.length); // 13'</p>",
        "exampleCode":"",
        "subTopics" : ["charAt()", "charCodeAt()", "concat()", "endsWith()", "includes()", "indexOf()", "lastIndexOf()", "localeCompare()", "match()", "matchAll()", "normalize()", "padEnd()", "padStart()", "repeat()", "replace()", "search()", "slice()", "split()", "startsWith()", "substr()", "substring()", "toLocaleLowerCase()", "toLocaleUpperCase()", "toLowerCase()", "toString()", "toUpperCase()", "trim()", "valueOf()"]
    },
    {
        "topicHead": "charAt()",
        "explanation" : "<p>The <code>charAt()</code> method in JavaScript is used to retrieve the character at a specified index position in a string. The method takes one parameter, which is the index of the character that you want to retrieve.</p><p>Here's an example:</p><pre><code>var str = \"Hello World\"; \n var char = str.charAt(6); \n console.log(char);  // Output: \"W\" </code></pre><p>In the example above, <code>str</code> contains the string \"Hello World\". The <code>charAt()</code> method is called on <code>str</code> with an argument of <code>6</code>, which corresponds to the character \"W\" in the string. The resulting character, \"W\", is then stored in the <code>char</code> variable and printed to the console.</p><p>It is important to note that the <code>charAt()</code> method returns an empty string if the specified index is out of range. For example:</p><pre><div><code>var str = \"Hello World\"; \n var char = str.charAt(100); \n console.log(char); // Output: \"\" </code></div></pre><p>In this example, the <code>charAt()</code> method is called with an argument of <code>100</code>, which is beyond the range of characters in the string. As a result, an empty string is returned.</p>"
    }
]
}