{
"jasmine": [
    {
    "question": "Syllabus to learn Jasmine framework.",
    "answer": "syllabus to learn Jasmine framework: \n\n1. Introduction to Jasmine\n- What is Jasmine?\n- Why use Jasmine?\n- Installing Jasmine\n- Jasmine's basic syntax\n\n2. Writing Specs\n- Anatomy of a spec\n- Describing behavior with describe\n- Writing expectations with expect\n- Matcher functions in Jasmine\n- Nesting describe blocks\n- Using beforeEach and afterEach hooks\n- Skipping specs with xdescribe and xit\n- Focusing on specific specs with fdescribe and fit\n\n3. Testing Asynchronous Code\n- Introduction to asynchronous testing\n- Using Jasmine's built-in asynchronous support\n- Controlling the flow of asynchronous code with done\n\n4. Spies, Stubs, and Mocks\n- Introduction to test doubles\n- Creating spies with jasmine.createSpy\n- Using toHaveBeenCalled, toHaveBeenCalledWith, and calls\n- Creating stubs with jasmine.createSpyObj\n- Creating mocks with jasmine.createSpyObj\n- Using and.returnValue and and.callFake\n\n5. Test Organization and Management\n- Organizing tests with describe and it\n- Grouping related tests with describe\n- Skipping tests and groups with xdescribe and xit\n- Running specific tests with fit and fdescribe\n- Running tests from the command line with jasmine\n\n6. Advanced Features\n- Testing asynchronous code with Promises and async/await\n- Using custom matchers\n- Writing custom matchers\n- Using Jasmine with other testing frameworks\n- Using Jasmine with a test runner like Karma or Jest\n\n7. Best Practices\n- Writing clear and concise specs\n- Following the \"single expectation per spec\" rule\n- Writing testable code\n- Keeping tests fast and reliable\n- Maintaining a healthy and readable test suite\n\nThis syllabus should cover the basics of Jasmine and help you get started with writing tests for your JavaScript code. Happy learning!"
    }
]
    
}   
    
    
    
    
    